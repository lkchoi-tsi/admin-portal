{"version":3,"sources":["index.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["/**\n * Show tooltip when user hovers over check-mark in roleÃ—permission grid\n */\n$(document).ready(function() {\n    $('td[title!=\"\"]').qtip({\n        position: { my: 'top center', at: 'bottom center' },\n        style: 'qtip-blue qtip-shadow'\n    });\n})\n\n/**\n * Cread/Edit Roles\n */\nvar crud = new Vue({\n    el: '#role-modal',\n    data: {\n        modal: {\n            title: 'Role'\n        },\n        form: {\n            url: \"/api/v1/roles\",\n            method: \"post\",\n            role: { name: null, label: null }\n        }\n    },\n    methods: {\n\n        /**\n         * Initialize the \"Create/Edit Role\" modal\n         */\n        init: function(role) {\n            if (role) {\n                this.modal = {\n                    title: 'Edit Role'\n                };\n                this.form = {\n                    url: url('/api/v1/roles/' + role.id),\n                    method: 'put',\n                    role: role\n                };\n            }\n            else {\n                this.modal = {\n                    title: 'Create Role'\n                };\n                this.form = {\n                    url: url('/api/v1/roles'),\n                    method: 'post',\n                    role: { name: null, label: null }\n                };\n            }\n        },\n\n        /**\n         * Make ajax call to save the role to db\n         */\n        saveRole: function(role) {\n            var that = this;\n            $.ajax({\n                url: that.form.url,\n                method: that.form.method,\n                data: that.form.role,\n                success: function (response, status) {\n                    notification.success('Saved');\n                    $('#role-modal').modal('hide');\n                },\n                error: function (response, status, error) {\n                    notification.error('Could not save');\n                },\n                statusCode: {\n                    201: function(response) {\n                        // append to this.roles iff new role created\n                        table.addRole(response);\n                    }\n                }\n            })\n        }\n\n    }\n});\n\n/**\n * Filter roles\n */\nvar table = new Vue({\n    el: \"#roles-datatable\",\n    data: {\n        search_term: \"\",\n        roles: php.roles,\n        permissions: php.permissions\n    },\n    methods: {\n\n        /**\n         * Filter rows by search term\n         */\n        filterRows: function(role) {\n            return role.label.match(this.search_regex);\n        },\n\n        /**\n         * Check if a Role has a permission\n         */\n        hasPermission: function (role, permission_id) {\n            return _.contains(role.permission_ids, permission_id);\n        },\n\n        /**\n         * Open the \"Create/Edit Role\" modal\n         */\n        openModal: function(role) {\n            crud.init(role);\n            $('#role-modal').modal('show');\n        },\n\n        /**\n         * Toggle a role-permission\n         */\n        toggleRolePermission: function(role, permission_id) {\n            var i = _.indexOf(role.permission_ids, permission_id);\n            (i >= 0) ?\n                role.permission_ids.splice(i,1) : \n                role.permission_ids.push(permission_id);\n            this.saveRolePermissions(role);\n        },\n\n        /**\n         * Save role-permissions\n         */\n        saveRolePermissions(role) {\n            $.ajax({\n                url: url('/api/v1/roles/' + role.id + '/permissions'),\n                method: 'post',\n                dataType: 'json',\n                data: { permission_ids: role.permission_ids },\n                success: function(response) {\n                    notification.show('Ok', 'success', 500);\n                },\n                error: function(response, status, error) {\n                    console.log(error);\n                    notification.show('Could not save', 'error');\n                }\n            });\n        },\n\n        /**\n         * Add new role to table\n         */\n        addRole: function(role) {\n            // add expected attributes to new role object\n            role.permission_ids = [];\n            role.permissions = {}; // not used\n            this.roles.push(role);\n        }\n\n    },\n\n    computed: {\n\n        /**\n         * Turn the search term into a regex pattern\n         */\n        search_regex: function() {\n            return new RegExp(this.search_term,'i');\n        }\n    }\n});\n\n/**\n * Open \"Create Role\" modal\n */\n$('#new-role-btn').click(function() {\n    crud.init();\n    $('#role-modal').modal('show');\n});"],"sourceRoot":"/source/"}